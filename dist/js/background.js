(()=>{var n={325:n=>{var e;self,e=()=>(()=>{"use strict";var n={d:(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},o:(n,e)=>Object.prototype.hasOwnProperty.call(n,e),r:n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})}},e={};function t(n,e,t,o){return new(t||(t=Promise))((function(i,r){function a(n){try{l(o.next(n))}catch(n){r(n)}}function c(n){try{l(o.throw(n))}catch(n){r(n)}}function l(n){var e;n.done?i(n.value):(e=n.value,e instanceof t?e:new t((function(n){n(e)}))).then(a,c)}l((o=o.apply(n,e||[])).next())}))}function o({month:n,year:e}){const t=new Date(e,n,1),o=new Date(e,n+1,0),i=[];for(let r=t.getDate();r<=o.getDate();r++)i.push(new Date(e,n,r));return i}function i({date:n}){return n.toLocaleString("en-GB").split(",")[0].split("/").reverse().join("-")}function r({period_id:n,day:e,date:t,clock_in:o,clock_out:i}){return{clock_in:o,clock_out:i,day:e,period_id:n,workable:!0,location_type:null,time_settings_break_configuration_id:null,minutes:null,date:t,source:"desktop"}}function a(n){return t(this,void 0,void 0,(function*(){return fetch("https://api.factorialhr.com/attendance/shifts",{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify(n)}).then((n=>n.json())).then((e=>(console.log("Nuevo intervalo creado: ",n),e))).catch((n=>(console.error(n),null)))}))}function c({shiftId:n}){return t(this,void 0,void 0,(function*(){return fetch(`https://api.factorialhr.com/attendance/shifts/${n}`,{method:"DELETE",headers:{"Content-Type":"application/json"},credentials:"include"}).catch((n=>(console.error(n),null)))}))}function l({period_id:n}){return t(this,void 0,void 0,(function*(){const e=yield function({period_id:n}){return t(this,void 0,void 0,(function*(){return fetch("https://api.factorialhr.com/attendance/shifts",{method:"GET",headers:{"Content-Type":"application/json"},credentials:"include"}).then((n=>n.json())).then((e=>e.filter((e=>e.period_id===n)))).catch((n=>(console.error(n),null)))}))}({period_id:n});for(const n of e)yield c({shiftId:n.id})}))}function d({year:n,month:e,intervals:c,minutes_per_day:l=480,dry_run:d=!1}){var s,u,p,m,y,_;return t(this,void 0,void 0,(function*(){const h=yield function(){return t(this,void 0,void 0,(function*(){return fetch("https://api.factorialhr.com/graphql",{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({operationName:"GetCurrent",variables:{contractVersionsActiveOn:(new Date).toISOString().split("T")[0]},query:"query GetCurrent($contractVersionsActiveOn: ISO8601Date!){\n  apiCore {\n    _policies {\n      companySeeEmployeeProfile {\n        can\n        __typename\n      }\n      __typename\n    }\n    currentsConnection {\n      edges {\n        node {\n          access {\n            id\n            analyticsConsent\n            avatar\n            discoverabilityWidgetValue\n            firstDayOfWeek\n            firstName\n            fullName\n            isAdmin\n            lastName\n            locale\n            npsAttempt\n            npsDue\n            timeFormat\n            userId\n            __typename\n          }\n          company {\n            id\n            industry\n            legalEntities {\n              id\n              country\n              currency\n              legalName\n              main\n              __typename\n            }\n            logo\n            name\n            publicUrl\n            size\n            subscription {\n              id\n              atsPlan\n              currentCycleQuantity\n              inFreeTrial\n              isPre2022Legacy\n              plan\n              employeesLimit\n              planFamily\n              __typename\n            }\n            createdAt\n            __typename\n          }\n          email\n          employee {\n            id\n            attendanceEmployeesPolicyId\n            attendanceEmployeesSettingId\n            contractversionsConnection(activeOn: $contractVersionsActiveOn) {\n              edges {\n                node {\n                  id\n                  startsOn\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            firstName\n            hasRegularAccess\n            isTerminating\n            lastName\n            locationId\n            phoneNumber\n            preferredName\n            reports {\n              id\n              __typename\n            }\n            legalEntity {\n              id\n              country\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  billing {\n    _policies {\n      subscriptionManageSubscription {\n        can\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  intercom {\n    _policies {\n      allowIntercom {\n        can\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  teams {\n    _policies {\n      teamCreate {\n        can\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  timeoff {\n    _policies {\n      companyManageTimeoff {\n        can\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}"})}).then((n=>n.json())).catch((n=>(console.error(n),null)))}))}(),f=null===(_=null===(y=null===(m=null===(p=null===(u=null===(s=null==h?void 0:h.data)||void 0===s?void 0:s.apiCore)||void 0===u?void 0:u.currentsConnection)||void 0===p?void 0:p.edges[0])||void 0===m?void 0:m.node)||void 0===y?void 0:y.employee)||void 0===_?void 0:_.id;if(!f)return void console.error("No se puede continuar por que no se ha podido obtener el ID del empleado.");console.log("ID de empleado: ",f);const v=yield function({employee_id:n}){return t(this,void 0,void 0,(function*(){return fetch(`https://api.factorialhr.com/employees/${n}`,{method:"GET",credentials:"include"}).then((n=>n.json())).catch((n=>(console.error(n),null)))}))}({employee_id:f});if(!(null==v?void 0:v.location_id))return void console.error("No se puede continuar por que no se ha podido obtener la localización del empleado.");console.log("ID de la localización del empleado: ",v.location_id);const g=yield function({location_id:n}){return t(this,void 0,void 0,(function*(){return fetch("https://api.factorialhr.com/company_holidays",{method:"GET",credentials:"include"}).then((n=>n.json())).then((e=>e.filter((e=>e.location_id===n)))).catch((n=>(console.error(n),null)))}))}({location_id:v.location_id});(null==g?void 0:g.length)>0&&console.log(`Días festivos para la localización ${v.location_id}: `,g);const b=g.map((n=>n.date)),D=yield function({year:n,month:e,employee_id:r}){return t(this,void 0,void 0,(function*(){const t=function({month:n,year:e}){return i({date:o({month:n,year:e})[0]})}({year:n,month:e}),a=function({month:n,year:e}){return i({date:o({month:n,year:e}).pop()})}({year:n,month:e});return fetch(`https://api.factorialhr.com/attendance/periods?year=${n}&month=${e}&employee_id=${r}&start_on=${t}&end_on=${a}`,{method:"GET",credentials:"include"}).then((n=>n.json())).catch((n=>(console.error(n),null)))}))}({year:n,month:e,employee_id:f}),S=null==D?void 0:D[0];S&&(console.log("ID del periodo actual a rellenar: ",S.id),yield function({month:n,year:e,intervals:c,period_id:l,tracked_minutes_distribution:d,minutes_per_day:s,companyHolidayDateStrList:u,dry_run:p}){return t(this,void 0,void 0,(function*(){const m=yield function({month:n,year:e,intervals:a,period_id:c,tracked_minutes_distribution:l,minutes_per_day:d,companyHolidayDateStrList:s}){return t(this,void 0,void 0,(function*(){const t=o({month:n,year:e}).filter(((n,e)=>(null==l?void 0:l[e])<d)).filter((n=>function(n){const e=n.getDay();return 0!==e&&6!==e}(n))).filter((n=>!function({date:n}){const e=new Date(Date.now()),t=new Date(e.getFullYear(),e.getMonth(),e.getDate());return n.getTime()>t.getTime()}({date:n}))).map((n=>i({date:n}))).filter((n=>!s.includes(n))),u=[];(null==t?void 0:t.length)<=0&&console.log("No hay días pendientes de registrar horas.");for(const n of t)for(const e of a){const t=Number(n.split("-").pop()),o=r({period_id:c,day:t,date:n,clock_in:e.clock_in,clock_out:e.clock_out});u.push(o)}return u}))}({month:n,year:e,intervals:c,period_id:l,tracked_minutes_distribution:d,minutes_per_day:s,companyHolidayDateStrList:u});for(const n of m)p?console.log("[Dry run mode] Nuevo intervalo creado: ",n):yield a(n)}))}({month:e,year:n,period_id:S.id,intervals:c,tracked_minutes_distribution:S.tracked_minutes_distribution,minutes_per_day:l,companyHolidayDateStrList:b,dry_run:d}),d||window.location.reload())}))}return n.r(e),n.d(e,{batch:()=>d,deleteAllShiftsByPeriodId:()=>l}),Object.create,Object.create,"function"==typeof SuppressedError&&SuppressedError,e})(),n.exports=e()}},e={};function t(o){var i=e[o];if(void 0!==i)return i.exports;var r=e[o]={exports:{}};return n[o](r,r.exports,t),r.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{"use strict";var n=t(325),e=t.n(n);chrome.runtime.onMessage.addListener(((n,t,o)=>{if("executeBatch"===n.action)return e().batch(n.data).then((n=>{console.log(n),o(n)})).catch((n=>{console.error(n),o({error:n.message})})),!0}))})()})();